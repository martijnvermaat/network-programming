* Kiezen voor TCP (server moet idempotent zijn met UDP)
* Programma versie PAPERSTORAGE_VERS uit paperstorage.h halen
* Hoe zit het met malloc/free van argumenten en return values
* Alle malloc()s langs lopen om te kijken of ze wel ge-free()-d worden (indien nodig)
  Plotseling inzicht: we moeten xdr_free() steeds gebruiken om de malloc's van de
  vorige call te free()en. Helaas zit daar op dit moment data in uit de lijst die
  we willen houden. We kunnen better echt alles malloc()en zodat echt het complete
  procedure resultaat ge-xdr_free()d kan worden.

http://www.faqs.org/rfcs/rfc1832.html
http://ou800doc.caldera.com/en/SDK_netapi/rpcpC.rpcgen_xdr.html
http://www.google.com/codesearch?hl=en&q=show:1eBUjoaX3QE:FBt1YwFMXys:xwSiN5E0tBY&sa=N&ct=rd&cs_p=http://www-static.cc.gatech.edu/classes/AY2003/cs4210_summer/rpc-example.tar&cs_f=rpc-example/server.c
http://www.google.com/codesearch?hl=en&q=show:H2Tjs0TCPUQ:ftSAcjJr_xY:GW_r6fRmmlQ&sa=N&ct=rd&cs_p=http://ftp.osuosl.org/pub/FreeBSD/distfiles/flick-2.1-src.tar.gz&cs_f=flick-2.1/test/examples/dyfs/yfs.x
http://www2.cs.uregina.ca/~hamilton/courses/430/notes/rpc.html
http://web.cs.wpi.edu/~cs4513/b01/week4-sunrpc/week4-sunrpc.html
